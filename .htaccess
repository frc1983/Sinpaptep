# Yii2 Advanced Template - .htaccess Principal
# Separação de rotas entre Frontend e Backend

RewriteEngine On

# Força HTTPS (descomente se tiver SSL)
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Remove www (descomente se necessário)
# RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
# RewriteRule ^(.*)$ http://%1/$1 [R=301,L]

# SEPARAÇÃO DE ROTAS
# 1. Rotas do Backend - redireciona /backend/web para backend/web/
RewriteCond %{REQUEST_URI} ^/backend/web(.*)$
RewriteRule ^backend/web(.*)$ backend/web/$1 [L]

# 2. Rotas do Frontend - redireciona tudo o resto para frontend/web/
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ frontend/web/$1 [L]

# Proteção de arquivos sensíveis na raiz
<FilesMatch "^\.">
    Order allow,deny
    Deny from all
</FilesMatch>

<FilesMatch "\.(htaccess|htpasswd|ini|log|sh|sql|conf|env|key|pem|crt|bak|backup|old|orig|save|swp|tmp)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Proteção de arquivos de controle de versão
<FilesMatch "\.(git|svn|hg|bzr)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Proteção de arquivos do Composer
<FilesMatch "composer\.(json|lock)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Bloqueio de acesso a diretórios sensíveis (exceto backend/web e frontend/web)
RewriteRule ^(runtime|vendor|tests|migrations|console|common)/ - [F,L]

# Headers de segurança básicos
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
</IfModule> 